#!/usr/bin/env bash

# System memory monitoring and alerts.
#
# The program monitors the system memory and displays statistics
# in the terminal. If the available memory is below a certain
# threshold -- critical notifications are sent.
#
# Source: https://github.com/kplachkov/dotfiles

function alert {
	notify-send -u critical "$1" "$2"

	for _ in {1..3}; do
		paplay -p /usr/share/sounds/freedesktop/stereo/dialog-warning.oga
	done
}

function print_memory_status {
	echo "---"
	echo "Memory status - $(date)"
	echo "Used memory: $(echo "scale=2; $1 / 1000" | bc)G"
	echo "Available memory: $(echo "scale=2; $2 / 1000" | bc)G"
	echo "Total memory: $(echo "scale=2; $3 / 1000" | bc)G"
}

function main {
	echo "Monitoring system memory..."

	local mem_used_threshold=0.85 # [0, 1]
	local normal_mem_interval=3
	local low_mem_interval=10

	echo "Threshold for low memory alerts: $(echo "(1 - $mem_used_threshold) * 100" | bc)%"

	while true; do
		mem_total=$(free -t --mega | awk '/^Total:/{print $2}')
		mem_used=$(free -t --mega | awk '/^Total:/{print $3}')

		mem_available=$(echo "$mem_total - $mem_used" | bc)

		print_memory_status "$mem_used" "$mem_available" "$mem_total"

		if [[ $(printf "%.0f" "$(echo "$mem_total * $mem_used_threshold" | bc)") -gt $mem_used ]]; then
			sleep $normal_mem_interval
			continue
		fi

		'alert' "Low memory" \
			"Available memory: $(echo "scale=2; $mem_available / 1000" | bc)G"

		sleep $low_mem_interval
	done
}

main "$@"
